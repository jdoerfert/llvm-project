; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -argpromotion -S | FileCheck %s --check-prefixes=ALL,ARGPROMOTION
; RUN: opt -S -passes=attributor -aa-pipeline='basic-aa' -attributor-disable=false -attributor-max-iterations-verify -attributor-max-iterations=2 < %s | FileCheck %s --check-prefixes=ALL,ATTRIBUTOR
; PR2498

; This test tries to convince argpromotion about promoting the load from %A + 2,
; because there is a load of %A in the entry block
define internal i32 @callee(i1 %C, i32* %A) {
; ARGPROMOTION-LABEL: define {{[^@]+}}@callee
; ARGPROMOTION-SAME: (i1 [[C:%.*]], i32* [[A:%.*]])
; ARGPROMOTION-NEXT:  entry:
; ARGPROMOTION-NEXT:    [[A_0:%.*]] = load i32, i32* [[A]]
; ARGPROMOTION-NEXT:    br i1 [[C]], label [[T:%.*]], label [[F:%.*]]
; ARGPROMOTION:       T:
; ARGPROMOTION-NEXT:    ret i32 [[A_0]]
; ARGPROMOTION:       F:
; ARGPROMOTION-NEXT:    [[A_2:%.*]] = getelementptr i32, i32* [[A]], i32 2
; ARGPROMOTION-NEXT:    [[R:%.*]] = load i32, i32* [[A_2]]
; ARGPROMOTION-NEXT:    ret i32 [[R]]
;
; ATTRIBUTOR-LABEL: define {{[^@]+}}@callee
; ATTRIBUTOR-SAME: (i1 [[C:%.*]], i32* nocapture nonnull readonly dereferenceable(4) [[A:%.*]])
; ATTRIBUTOR-NEXT:  entry:
; ATTRIBUTOR-NEXT:    [[A_0:%.*]] = load i32, i32* [[A]]
; ATTRIBUTOR-NEXT:    br i1 [[C]], label [[T:%.*]], label [[F:%.*]]
; ATTRIBUTOR:       T:
; ATTRIBUTOR-NEXT:    ret i32 [[A_0]]
; ATTRIBUTOR:       F:
; ATTRIBUTOR-NEXT:    [[A_2:%.*]] = getelementptr i32, i32* [[A]], i32 2
; ATTRIBUTOR-NEXT:    [[R:%.*]] = load i32, i32* [[A_2]]
; ATTRIBUTOR-NEXT:    ret i32 [[R]]
;
entry:
  ; Unconditonally load the element at %A
  %A.0 = load i32, i32* %A
  br i1 %C, label %T, label %F

T:
  ret i32 %A.0

F:
  ; Load the element at offset two from %A. This should not be promoted!
  %A.2 = getelementptr i32, i32* %A, i32 2
  %R = load i32, i32* %A.2
  ret i32 %R
}

define i32 @foo(i1 %c, i32* %A) {
; ARGPROMOTION-LABEL: define {{[^@]+}}@foo
; ARGPROMOTION-SAME: (i1 [[C:%.*]], i32* [[A:%.*]])
; ARGPROMOTION-NEXT:    [[X:%.*]] = call i32 @callee(i1 [[C]], i32* [[A]])
; ARGPROMOTION-NEXT:    ret i32 [[X]]
;
; ATTRIBUTOR-LABEL: define {{[^@]+}}@foo
; ATTRIBUTOR-SAME: (i1 [[C:%.*]], i32* nocapture readonly [[A:%.*]])
; ATTRIBUTOR-NEXT:    [[X:%.*]] = call i32 @callee(i1 [[C]], i32* nocapture readonly [[A]])
; ATTRIBUTOR-NEXT:    ret i32 [[X]]
;
  %X = call i32 @callee(i1 %c, i32* %A)             ; <i32> [#uses=1]
  ret i32 %X
}

