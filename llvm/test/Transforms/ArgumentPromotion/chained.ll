; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -argpromotion -S | FileCheck %s --check-prefixes=ALL,ARGPROMOTION
; RUN: opt < %s -passes=argpromotion -S | FileCheck %s --check-prefixes=ALL,ARGPROMOTION
; RUN: opt -S -passes=attributor -aa-pipeline='basic-aa' -attributor-disable=false -attributor-max-iterations-verify -attributor-max-iterations=2 < %s | FileCheck %s --check-prefixes=ALL,ATTRIBUTOR

@G1 = constant i32 0
@G2 = constant i32* @G1

define internal i32 @test(i32** %x) {
; ARGPROMOTION-LABEL: define {{[^@]+}}@test
; ARGPROMOTION-SAME: (i32 [[X_VAL_VAL:%.*]])
; ARGPROMOTION-NEXT:  entry:
; ARGPROMOTION-NEXT:    ret i32 [[X_VAL_VAL]]
;
; ATTRIBUTOR-LABEL: define {{[^@]+}}@test()
; ATTRIBUTOR-NEXT:  entry:
; ATTRIBUTOR-NEXT:    [[Y:%.*]] = load i32*, i32** @G2, align 8
; ATTRIBUTOR-NEXT:    [[Z:%.*]] = load i32, i32* [[Y]]
; ATTRIBUTOR-NEXT:    ret i32 [[Z]]
;
entry:
  %y = load i32*, i32** %x
  %z = load i32, i32* %y
  ret i32 %z
}

define i32 @caller() {
; ARGPROMOTION-LABEL: define {{[^@]+}}@caller()
; ARGPROMOTION-NEXT:  entry:
; ARGPROMOTION-NEXT:    [[G2_VAL:%.*]] = load i32*, i32** @G2
; ARGPROMOTION-NEXT:    [[G2_VAL_VAL:%.*]] = load i32, i32* [[G2_VAL]]
; ARGPROMOTION-NEXT:    [[X:%.*]] = call i32 @test(i32 [[G2_VAL_VAL]])
; ARGPROMOTION-NEXT:    ret i32 [[X]]
;
; ATTRIBUTOR-LABEL: define {{[^@]+}}@caller()
; ATTRIBUTOR-NEXT:  entry:
; ATTRIBUTOR-NEXT:    [[X:%.*]] = call i32 @test()
; ATTRIBUTOR-NEXT:    ret i32 [[X]]
;
entry:
  %x = call i32 @test(i32** @G2)
  ret i32 %x
}

