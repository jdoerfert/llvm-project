; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -argpromotion -S | FileCheck %s --check-prefix=ARGPROMOTION

define internal i32 @deref(i32* %x) nounwind {
; ARGPROMOTION-LABEL: define {{[^@]+}}@deref
; ARGPROMOTION-SAME: (i32 [[X_VAL:%.*]])
; ARGPROMOTION-NEXT:  entry:
; ARGPROMOTION-NEXT:    ret i32 [[X_VAL]]
;
entry:
  %tmp2 = load i32, i32* %x, align 4
  ret i32 %tmp2
}

define i32 @f(i32 %x) {
; ARGPROMOTION-LABEL: define {{[^@]+}}@f
; ARGPROMOTION-SAME: (i32 [[X:%.*]])
; ARGPROMOTION-NEXT:  entry:
; ARGPROMOTION-NEXT:    [[X_ADDR:%.*]] = alloca i32
; ARGPROMOTION-NEXT:    store i32 [[X]], i32* [[X_ADDR]], align 4
; ARGPROMOTION-NEXT:    [[X_ADDR_VAL:%.*]] = load i32, i32* [[X_ADDR]], align 4
; ARGPROMOTION-NEXT:    [[TMP1:%.*]] = call i32 @deref(i32 [[X_ADDR_VAL]])
; ARGPROMOTION-NEXT:    ret i32 [[TMP1]]
;
entry:
  %x_addr = alloca i32
  store i32 %x, i32* %x_addr, align 4
  %tmp1 = call i32 @deref( i32* %x_addr ) nounwind
  ret i32 %tmp1
}
