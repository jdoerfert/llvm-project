; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -argpromotion -sroa -S | FileCheck %s --check-prefixes=ALL,ARGPROMOTION
; RUN: opt < %s -passes='argpromotion,function(sroa)' -S | FileCheck %s --check-prefixes=ALL,ARGPROMOTION
; RUN: opt -S -passes='attributor,function(sroa)' -aa-pipeline='basic-aa' -attributor-disable=false -attributor-max-iterations-verify -attributor-max-iterations=1 < %s | FileCheck %s --check-prefixes=ALL,ATTRIBUTOR

target datalayout = "E-p:64:64:64-a0:0:8-f32:32:32-f64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-v64:64:64-v128:128:128"

define internal i32 @callee(i1 %C, i32* %P) {
; ALL-LABEL: define {{[^@]+}}@callee
; ALL-SAME: (i1 [[C:%.*]], i32 [[TMP0:%.*]])
; ALL-NEXT:    br i1 [[C]], label [[T:%.*]], label [[F:%.*]]
; ALL:       T:
; ALL-NEXT:    ret i32 17
; ALL:       F:
; ALL-NEXT:    ret i32 [[TMP0]]
;
  br i1 %C, label %T, label %F

T:              ; preds = %0
  ret i32 17

F:              ; preds = %0
  %X = load i32, i32* %P               ; <i32> [#uses=1]
  ret i32 %X
}

define i32 @foo(i1 %C) {
; ALL-LABEL: define {{[^@]+}}@foo
; ALL-SAME: (i1 [[C:%.*]])
; ALL-NEXT:    [[X:%.*]] = call i32 @callee(i1 [[C]], i32 17)
; ALL-NEXT:    ret i32 [[X]]
;
  %A = alloca i32         ; <i32*> [#uses=2]
  store i32 17, i32* %A
  %X = call i32 @callee( i1 %C, i32* %A )              ; <i32> [#uses=1]
  ret i32 %X
}

