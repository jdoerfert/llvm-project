; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -argpromotion -S | FileCheck %s --check-prefixes=ALL,ARGPROMOTION
; RUN: opt < %s -passes=argpromotion -S | FileCheck %s --check-prefixes=ALL,ARGPROMOTION
; RUN: opt -S -passes=attributor -aa-pipeline='basic-aa' -attributor-disable=false -attributor-max-iterations-verify -attributor-max-iterations=2 < %s | FileCheck %s --check-prefixes=ALL,ATTRIBUTOR

; Don't promote around control flow.
define internal i32 @callee(i1 %C, i32* nocapture readonly %P) {
; ALL-LABEL: define {{[^@]+}}@callee
; ALL-SAME: (i1 [[C:%.*]], i32* nocapture readonly [[P:%.*]])
; ALL-NEXT:  entry:
; ALL-NEXT:    br i1 [[C]], label [[T:%.*]], label [[F:%.*]]
; ALL:       T:
; ALL-NEXT:    ret i32 17
; ALL:       F:
; ALL-NEXT:    [[X:%.*]] = load i32, i32* [[P]]
; ALL-NEXT:    ret i32 [[X]]
;
entry:
  br i1 %C, label %T, label %F

T:
  ret i32 17

F:
  %X = load i32, i32* %P
  ret i32 %X
}

define i32 @foo(i1 %C, i32* nocapture readonly %P) {
; ALL-LABEL: define {{[^@]+}}@foo
; ALL-SAME: (i1 [[C:%.*]], i32* nocapture readonly [[P:%.*]])
; ALL-NEXT:  entry:
; ALL-NEXT:    [[X:%.*]] = call i32 @callee(i1 [[C]], i32* nocapture readonly [[P]])
; ALL-NEXT:    ret i32 [[X]]
;
entry:
  %X = call i32 @callee(i1 %C, i32* nocapture readonly %P)
  ret i32 %X
}

