; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -argpromotion -S | FileCheck %s --check-prefix=ARGPROMOTION
; RUN: opt < %s -passes=argpromotion -S | FileCheck %s --check-prefix=ARGPROMOTION

; Don't promote around control flow.
define internal i32 @callee(i1 %C, i32* %P) {
; ARGPROMOTION-LABEL: define {{[^@]+}}@callee
; ARGPROMOTION-SAME: (i1 [[C:%.*]], i32* [[P:%.*]])
; ARGPROMOTION-NEXT:  entry:
; ARGPROMOTION-NEXT:    br i1 [[C:%.*]], label [[T:%.*]], label [[F:%.*]]
; ARGPROMOTION:       T:
; ARGPROMOTION-NEXT:    ret i32 17
; ARGPROMOTION:       F:
; ARGPROMOTION-NEXT:    [[X:%.*]] = load i32, i32* [[P:%.*]]
; ARGPROMOTION-NEXT:    ret i32 [[X]]
;
entry:
  br i1 %C, label %T, label %F

T:
  ret i32 17

F:
  %X = load i32, i32* %P
  ret i32 %X
}

define i32 @foo() {
; ARGPROMOTION-LABEL: define {{[^@]+}}@foo()
; ARGPROMOTION-NEXT:  entry:
; ARGPROMOTION-NEXT:    [[X:%.*]] = call i32 @callee(i1 true, i32* null)
; ARGPROMOTION-NEXT:    ret i32 [[X]]
;
entry:
  %X = call i32 @callee(i1 true, i32* null)
  ret i32 %X
}

