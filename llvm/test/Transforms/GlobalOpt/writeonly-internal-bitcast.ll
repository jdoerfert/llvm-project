; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -globalopt %s -S -o - | FileCheck %s

%struct.S = type { i32, [2048 x i8] }

@DirectAccess = internal global %struct.S undef, align 4
@CastAccess = internal global %struct.S undef, align 4
@CastAccessConst = internal global %struct.S undef, align 4
@ASCastAccess = internal addrspace(3) global %struct.S undef, align 4
@P2ICastAccess = internal global %struct.S undef, align 4

define void @f(i32 %I32)  {
; CHECK-LABEL: @f(
; CHECK-NEXT:    [[G4:%.*]] = getelementptr inbounds [[STRUCT_S:%.*]], %struct.S* @P2ICastAccess, i32 0, i32 1, i32 42
; CHECK-NEXT:    [[PTR2INT:%.*]] = ptrtoint i8* [[G4]] to i64
; CHECK-NEXT:    [[INT2PTR:%.*]] = inttoptr i64 [[PTR2INT]] to i32*
; CHECK-NEXT:    store i32 0, i32* [[INT2PTR]], align 4
; CHECK-NEXT:    ret void
;
  %g0 = getelementptr inbounds %struct.S, %struct.S* @DirectAccess, i32 0, i32 1, i32 %I32
  store i8 0, i8* %g0, align 4
  %g1 = getelementptr inbounds %struct.S, %struct.S* @CastAccess, i32 0, i32 1, i32 %I32
  %bc1 = bitcast i8* %g1 to i32*
  store i32 0, i32* %bc1, align 4
  %g2 = getelementptr inbounds %struct.S, %struct.S* @CastAccessConst, i32 0, i32 1, i32 42
  %bc2 = bitcast i8* %g2 to i32*
  store i32 0, i32* %bc2, align 4
  %as3 = addrspacecast %struct.S addrspace(3)* @ASCastAccess to %struct.S*
  %g3 = getelementptr inbounds %struct.S, %struct.S* %as3, i32 0, i32 1, i32 %I32
  %bc3 = bitcast i8* %g3 to i32*
  store i32 0, i32* %bc3, align 4
  %g4 = getelementptr inbounds %struct.S, %struct.S* @P2ICastAccess, i32 0, i32 1, i32 42
  %ptr2int = ptrtoint i8* %g4 to i64
  %int2ptr = inttoptr i64 %ptr2int to i32*
  store i32 0, i32* %int2ptr, align 4
  ret void
}
