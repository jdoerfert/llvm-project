; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature --check-attributes --check-globals
; RUN: opt -passes=openmp-opt-cgscc -S < %s | FileCheck %s --check-prefixes=CHECK

define weak void @__omp_offloading_34_736f9796__Z3fooPi_l2(i32* %X) local_unnamed_addr {
; CHECK-LABEL: define {{[^@]+}}@__omp_offloading_34_736f9796__Z3fooPi_l2
; CHECK-SAME: (i32* [[X:%.*]]) local_unnamed_addr {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    ret void
;
entry:
  call fastcc void @__kmpc_target_init()
  ret void
}

define internal fastcc i32 @GetNumberOfThreadsInBlock() unnamed_addr {
; CHECK: Function Attrs: nounwind readnone
; CHECK-LABEL: define {{[^@]+}}@GetNumberOfThreadsInBlock
; CHECK-SAME: () unnamed_addr #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    ret i32 undef
;
entry:
  ret i32 undef
}

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #0

define internal fastcc void @__kmpc_target_init() unnamed_addr {
; CHECK: Function Attrs: nounwind readnone
; CHECK-LABEL: define {{[^@]+}}@__kmpc_target_init
; CHECK-SAME: () unnamed_addr #[[ATTR0]] {
; CHECK-NEXT:  if.then.i:
; CHECK-NEXT:    ret void
;
if.then.i:
  %call2.i = call fastcc i32 @GetNumberOfThreadsInBlock()
  ret void
}

define internal fastcc i32 @_Z24GetNumberOfWorkersInTeamv() unnamed_addr {
; CHECK-LABEL: define {{[^@]+}}@_Z24GetNumberOfWorkersInTeamv() unnamed_addr {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    ret i32 undef
;
entry:
  %call.i = call fastcc i32 @GetNumberOfThreadsInBlock()
  ret i32 undef
}

attributes #0 = { nounwind readnone }

!nvvm.annotations = !{!0}

!0 = !{void (i32*)* @__omp_offloading_34_736f9796__Z3fooPi_l2, !"kernel", i32 1}

;.
; CHECK: attributes #[[ATTR0]] = { nounwind readnone }
;.
; CHECK: [[META0:![0-9]+]] = !{void (i32*)* @__omp_offloading_34_736f9796__Z3fooPi_l2, !"kernel", i32 1}
;.
